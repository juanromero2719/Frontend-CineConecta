{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/proyectos%20de%20programacion/Frontend-cineConecta/cineconecta/src/services/axiosInstance.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: 'https://backend-alpha-pearl-61.vercel.app/api',\r\n  //baseURL: 'http://localhost:8080/api',\r\n  withCredentials: true,\r\n});\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACxC,SAAS;IACT,uCAAuC;IACvC,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://E%3A/proyectos%20de%20programacion/Frontend-cineConecta/cineconecta/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { axiosInstance } from '@/services/axiosInstance';\r\nimport { usePathname, useRouter } from 'next/navigation';\r\n\r\ninterface AuthContextType {\r\n    isAuthenticated: boolean;\r\n    setIsAuthenticated: (value: boolean) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nconst publicRoutes = ['/', '/login', '/register'];\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const pathname = usePathname();\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        const verifyAuth = async () => {\r\n            if (publicRoutes.includes(pathname)) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axiosInstance.get('/verify-token');\r\n                setIsAuthenticated(response.data.authenticated);\r\n\r\n                if (!response.data.authenticated) {\r\n                    router.push('/');\r\n                }\r\n            } catch {\r\n                setIsAuthenticated(false);\r\n                router.push('/');\r\n            }\r\n        };\r\n\r\n        verifyAuth();\r\n    }, [pathname, router]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useAuth() {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n    }\r\n    return context;\r\n} "],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAWA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAE/D,MAAM,eAAe;IAAC;IAAK;IAAU;CAAY;AAE1C,SAAS,aAAa,EAAE,QAAQ,EAA2B;;IAC9D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACN,MAAM;qDAAa;oBACf,IAAI,aAAa,QAAQ,CAAC,WAAW;wBACjC;oBACJ;oBAEA,IAAI;wBACA,MAAM,WAAW,MAAM,mIAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;wBACzC,mBAAmB,SAAS,IAAI,CAAC,aAAa;wBAE9C,IAAI,CAAC,SAAS,IAAI,CAAC,aAAa,EAAE;4BAC9B,OAAO,IAAI,CAAC;wBAChB;oBACJ,EAAE,OAAM;wBACJ,mBAAmB;wBACnB,OAAO,IAAI,CAAC;oBAChB;gBACJ;;YAEA;QACJ;iCAAG;QAAC;QAAU;KAAO;IAErB,qBACI,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAiB;QAAmB;kBAC9D;;;;;;AAGb;GAhCgB;;QAEK,qIAAA,CAAA,cAAW;QACb,qIAAA,CAAA,YAAS;;;KAHZ;AAkCT,SAAS;;IACZ,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACvB,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;IANgB","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file://E%3A/proyectos%20de%20programacion/Frontend-cineConecta/cineconecta/src/components/Providers.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { AuthProvider } from '@/contexts/AuthContext';\r\n\r\nexport function Providers({ children }: { children: React.ReactNode }) {\r\n    return (\r\n        <AuthProvider>\r\n            {children}\r\n        </AuthProvider>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACjE,qBACI,6LAAC,kIAAA,CAAA,eAAY;kBACR;;;;;;AAGb;KANgB","debugId":null}}]
}